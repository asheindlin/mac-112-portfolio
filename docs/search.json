[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Introduction\nThis is my online notebook for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "activities/README.html",
    "href": "activities/README.html",
    "title": "Activities",
    "section": "",
    "text": "All activities live here.",
    "crumbs": [
      "Activities"
    ]
  },
  {
    "objectID": "activities/activity-01.html",
    "href": "activities/activity-01.html",
    "title": "1  Activity 01",
    "section": "",
    "text": "Hello I am currently tinkering with this document in r studio to see how it works. I hope this text stays.\nOk, this is actually really cool. I never realized how many different files went into creating a website.\nIts interesting to see how almost every different page is its own file and how in addittion to that there are also even more files which tell R which files it needs to save to make the journal.\nHello",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Activity 01</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html",
    "href": "activities/03-univariate-viz-notes.html",
    "title": "4  Background",
    "section": "",
    "text": "5 Warm-up",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#the-importance-of-visualizations",
    "href": "activities/03-univariate-viz-notes.html#the-importance-of-visualizations",
    "title": "4  Background",
    "section": "5.1 The importance of visualizations",
    "text": "5.1 The importance of visualizations\nEXAMPLE 1\nThe data below includes information on hiking trails in the 46 “high peaks” in the Adirondack mountains of northern New York state. This includes data on the hike’s highest elevation (feet), vertical ascent (feet), length (miles), time in hours that it takes to complete, and difficulty rating. Open this data in a viewer, through the Environment tab or by typing View(hikes) in the console.\n\n# Import data\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\nTell me about the patterns and trends in hiking trail elevation. What about the the relationship between a hike’s elevation and the typical time it takes to summit / reach the top?\n\n\n\n\n\nEXAMPLE 2\nWhat if this New York Times article tried telling this story without using data viz? What would that story be like?\n\n\n\n\n\n\nBenefits of visualization\n\nUnderstand what we’re working with:\n\nscales & typical outcomes\noutliers, i.e. unusual cases\npatterns & relationships\n\nRefine research questions & inform next steps of our analysis.\nCommunicate our findings and tell a story.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#components-of-data-graphics",
    "href": "activities/03-univariate-viz-notes.html#components-of-data-graphics",
    "title": "4  Background",
    "section": "5.2 Components of data graphics",
    "text": "5.2 Components of data graphics\nEXAMPLE 3\nData viz is the process of mapping data to different plot components. For example, in the NYT example above, the research team mapped data like the following (but with many more rows!) to the plot:\n\n\n\nobservation\ndecade\nyear\ndate\nrelative temp\n\n\n\n\n1\n2020-30\n2023\n1/23\n1.2\n\n\n2\n1940-60\n1945\n3/45\n-0.05\n\n\n\nWrite down step-by-step directions to use a data table like this one to create the temperature visualization. A computer is your audience. Thus be as precise as possible, but trust that the computer can find the exact numbers if you tell it where.\n\n\n\n\n\nCOMPONENTS OF GRAPHICS\nIn data viz, we essentially start with a blank canvas and then map data onto it. There are multiple possible mapping components. Some basics from Wickham (which goes into more depth):\n\na frame, or coordinate system\nThe variables or features that define the axes and gridlines of the canvas.\na layer\nThe geometric elements (e.g. lines, points) we add to the canvas to represent either the data points themselves or patterns among the data points. Each type of geometric element is a separate layer. These geometric elements are sometimes called “geoms” or “glyphs” (like heiroglyph!)\nscales\nThe aesthetics we might add to geometric elements (e.g. color, size, shape) to incorporate additional information about data scales or groups.\nfaceting\nThe splitting up of the data into multiple subplots, or facets, to examine different groups within the data.\na theme\nAdditional controls on the “finer points” of the plot aesthetics, (e.g. font type, background, color scheme).\n\n\n\n\n\n\nEXAMPLE\nIn the NYT graphic, the data was mapped to the plot as follows:\n\nframe: x-axis = date, y-axis = temp\nlayers: add one line per year, add dots for each month in 2023\nscales: color each line by decade\nfaceting: none\na theme: NYT style",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#ggplot-r-packages",
    "href": "activities/03-univariate-viz-notes.html#ggplot-r-packages",
    "title": "4  Background",
    "section": "5.3 ggplot + R packages",
    "text": "5.3 ggplot + R packages\nWe will use the powerful ggplot tools in RStudio to build (most of) our viz. The gg here is short for the “grammar of graphics”. These tools are developed in a way that:\n\nrecognizes that code is communication (it has a grammar!)\nconnects code to the components / philosophy of data viz\n\n\n\n\nEXAMPLE: ggplot in the news\n\nMPR journalist David Montgomery: R data viz\nBBC R data viz\n\n\n\n\nTo use these tools, we must first get them into R/RStudio! Recall that R is open source. Anybody can build R tools and share them through special R packages. The tidyverse package compiles a set of individual packages, including ggplot2, that share a common grammar and structure. Though the learning curve can be steep, this grammar is intuitive and generalizable once mastered. Image source: Posit BBC on X\n\nFollow the directions below to install this package, the directions depending upon whether or not you’re working on Mac’s server. Unless the authors of a package add updates, you only need to do this once all semester. To install:\n\nIf you’re working on Mac’s RStudio server\ntidyverse is already installed on the server! Check this 2 ways.\n\nType library(tidyverse) in your console. If you don’t get an error, it’s installed!\nCheck that it appears in the list under the “Packages” tab (bottom right pane).\n\nIf you’re working with a desktop version of R/RStudio\nIn the “Packages” tab (bottom right pane), click “Install”. From there type the name of the package (tidyverse), make sure the “Install dependencies” box is checked, and click “Install”.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-1-research-questions",
    "href": "activities/03-univariate-viz-notes.html#exercise-1-research-questions",
    "title": "4  Background",
    "section": "Exercise 1: Research questions",
    "text": "Exercise 1: Research questions\nLet’s dig into the hikes data, starting with the elevation and difficulty ratings of the hikes:\n\nhead(hikes)\n\n             peak elevation difficulty ascent length time    rating\n1     Mt. Marcy        5344          5   3166   14.8 10.0  moderate\n2 Algonquin Peak       5114          5   2936    9.6  9.0  moderate\n3   Mt. Haystack       4960          7   3570   17.8 12.0 difficult\n4   Mt. Skylight       4926          7   4265   17.9 15.0 difficult\n5 Whiteface Mtn.       4867          4   2535   10.4  8.5      easy\n6       Dix Mtn.       4857          5   2800   13.2 10.0  moderate\n\n\n\nWhat features would we like a visualization of the categorical difficulty rating variable to capture? I would want a bar-graph with the peak name being the x axis and the level of difficulty being the y axis. This allows for easy comparison of difficulty between different peaks.\nWhat about a visualization of the quantitative elevation variable? I would want a line graph. with each peak getting a different line. Elevation being y axis and length being x axis. So you can easily visualize the ascent of the different hikes.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-2-load-tidyverse",
    "href": "activities/03-univariate-viz-notes.html#exercise-2-load-tidyverse",
    "title": "4  Background",
    "section": "Exercise 2: Load tidyverse",
    "text": "Exercise 2: Load tidyverse\nWe’ll address the above questions using ggplot tools. Try running the following chunk and simply take note of the error message – this is one you’ll get a lot!\n\n# Use the ggplot function\nggplot(hikes, aes(x = rating))\n#Error in ggplot(hikes, aes(x = rating)) : \n  #could not find function \"ggplot\"\n\nIn order to use ggplot tools, we have to first load the tidyverse package in which they live. Mainly, we’ve installed the package but need to tell R when we want to use it. Run the chunk below to load the library. You’ll need to do this within any .qmd file that uses ggplot().\n\n# Load the package\nlibrary(tidyverse)",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-3-bar-chart-of-ratings-part-1",
    "href": "activities/03-univariate-viz-notes.html#exercise-3-bar-chart-of-ratings-part-1",
    "title": "4  Background",
    "section": "Exercise 3: Bar chart of ratings (part 1)",
    "text": "Exercise 3: Bar chart of ratings (part 1)\nConsider some specific research questions about the difficulty rating of the hikes:\nHow many hikes fall into each category? Are the hikes evenly distributed among these categories, or are some more common than others? 7 hikes fall into difficult. 11 hikes fall into easy. And 27 fall into moderate. The moderate hike is the most common, and then easy , and then hard.\nAll of these questions can be answered with: (1) a bar chart; of (2) the categorical data recorded in the rating column. First, set up the plotting frame:\n\nggplot(hikes, aes(x = rating)) + geom_bar()\n\n\n\n\n\n\n\n\nThink about:\n\nWhat did this do? What do you observe? By adding + geom we cant tell R what kind of graph we want.\nWhat, in general, is the first argument of the ggplot() function? It is telling r what is being plotted and from which survey.\nWhat is the purpose of writing x = rating? It tells r what the x axis is.\nWhat do you think aes stands for?!? It stands for axis",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-4-bar-chart-of-ratings-part-2",
    "href": "activities/03-univariate-viz-notes.html#exercise-4-bar-chart-of-ratings-part-2",
    "title": "4  Background",
    "section": "Exercise 4: Bar chart of ratings (part 2)",
    "text": "Exercise 4: Bar chart of ratings (part 2)\nNow let’s add a geometric layer to the frame / canvas, and start customizing the plot’s theme. To this end, try each chunk below, one by one. In each chunk, make a comment about how both the code and the corresponding plot both changed.\nNOTE:\n\nPay attention to the general code properties and structure, not memorization.\nNot all of these are “good” plots. We’re just exploring ggplot.\n\n\n# This is a bar graph similar to what we made earlier.\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n# This changed the heading of the y axis from \"count\" to \"Number of Hikes\"\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# This made the bars in the bar graph blue.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# This gave the blue bars an orange outline.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# Changed the background of the chart from gray to white.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-5-bar-chart-follow-up",
    "href": "activities/03-univariate-viz-notes.html#exercise-5-bar-chart-follow-up",
    "title": "4  Background",
    "section": "Exercise 5: Bar chart follow-up",
    "text": "Exercise 5: Bar chart follow-up\n\nPart a\nReflect on the ggplot() code.\n\nWhat’s the purpose of the +? When do we use it? It adds a geometric layer of what kind of plot we want.\nWe added the bars using geom_bar()? Why “geom”? That’s the geometric layer that is added.\nWhat does labs() stand for?\nWhat’s the difference between color and fill? fill is the inside of the bar graph color is the edges of the bar. ### Part b {.unnumbered}\n\nIn general, bar charts allow us to examine the following properties of a categorical variable:\n\nobserved categories: What categories did we observe?\nvariability between categories: Are observations evenly spread out among the categories, or are some categories more common than others?\n\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Summarize here what you learned from the bar chart, in context.\n\n\nPart c\nIs there anything you don’t like about this barplot? For example: check out the x-axis again.\nIt doesnt go into the negatives?",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-6-sad-bar-chart",
    "href": "activities/03-univariate-viz-notes.html#exercise-6-sad-bar-chart",
    "title": "4  Background",
    "section": "Exercise 6: Sad bar chart",
    "text": "Exercise 6: Sad bar chart\nLet’s now consider some research questions related to the quantitative elevation variable:\nAmong the hikes, what’s the range of elevation and how are the hikes distributed within this range (e.g. evenly, in clumps, “normally”)? What’s a typical elevation? Are there any outliers, i.e. hikes that have unusually high or low elevations?\nHere:\n\nConstruct a bar chart of the quantitative elevation variable.\nExplain why this might not be an effective visualization for this and other quantitative variables. (What questions does / doesn’t it help answer?)\n\n\nggplot(hikes, aes(x = elevation)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Elevation\", y = \"Number of Hikes\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nIts hard to easily visualize the different hikes because there are so many of them on this chart. And the range of the values are so huge it makes the bars difficult to look at.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-7-a-histogram-of-elevation",
    "href": "activities/03-univariate-viz-notes.html#exercise-7-a-histogram-of-elevation",
    "title": "4  Background",
    "section": "Exercise 7: A histogram of elevation",
    "text": "Exercise 7: A histogram of elevation\nQuantitative variables require different viz than categorical variables. Especially when there are many possible outcomes of the quantitative variable, it’s typically insufficient to simply count up the number of times we’ve observed a particular outcome (as the bar graph did above). It gives us a sense of ranges and typical outcomes, but not a good sense of how the observations are distributed across this range. We’ll explore two methods for graphing quantitative variables: histograms and density plots.\nHistograms are constructed by (1) dividing up the observed range of the variable into ‘bins’ of equal width; and (2) counting up the number of cases that fall into each bin. Check out the example below:\n\n\nPart a\nLet’s dig into some details.\n\nHow many hikes have an elevation between 4500 and 4700 feet? aroung 12 different hikes\nHow many total hikes have an elevation of at least 5100 feet? 2 different hikes ### Part b {.unnumbered}\n\nNow the bigger picture. In general, histograms allow us to examine the following properties of a quantitative variable:\n\ntypical outcome: Where’s the center of the data points? What’s typical?\nvariability & range: How spread out are the outcomes? What are the max and min outcomes?\nshape: How are values distributed along the observed range? Is the distribution symmetric, right-skewed, left-skewed, bi-modal, or uniform (flat)?\noutliers: Are there any outliers, i.e. outcomes that are unusually large/small?\n\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Addressing each of the features in the above list, summarize here what you learned from the histogram, in context.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-8-building-histograms-part-1",
    "href": "activities/03-univariate-viz-notes.html#exercise-8-building-histograms-part-1",
    "title": "4  Background",
    "section": "Exercise 8: Building histograms (part 1)",
    "text": "Exercise 8: Building histograms (part 1)\n2-MINUTE CHALLENGE: Thinking of the bar chart code, try to intuit what line you can tack on to the below frame of elevation to add a histogram layer. Don’t forget a +. If it doesn’t come to you within 2 minutes, no problem – all will be revealed in the next exercise.\n\nggplot(hikes, aes(x = elevation))+geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-9-building-histograms-part-2",
    "href": "activities/03-univariate-viz-notes.html#exercise-9-building-histograms-part-2",
    "title": "4  Background",
    "section": "Exercise 9: Building histograms (part 2)",
    "text": "Exercise 9: Building histograms (part 2)\nLet’s build some histograms. Try each chunk below, one by one. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\n# Looks like the one I just made.\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n# Gave the bars a white hue.\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n# Made the bars a blue color.\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n# Changed the titles of the x and y axis\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n# Made the bars really wide\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# Made the bars really thin\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# made the bars 200 wide\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-10-histogram-follow-up",
    "href": "activities/03-univariate-viz-notes.html#exercise-10-histogram-follow-up",
    "title": "4  Background",
    "section": "Exercise 10: Histogram follow-up",
    "text": "Exercise 10: Histogram follow-up\n\nWhat function added the histogram layer / geometry? +geaom_histogram\nWhat’s the difference between color and fill? Color gives a hue/halo around the bars. Fill give the color of the bar itself.\nWhy does adding color = \"white\" improve the visualization? It distincs the bars from the gray background.\nWhat did binwidth do? changed the width of the bars\nWhy does the histogram become ineffective if the binwidth is too big (e.g. 1000 feet)? we cant see every bar on the graph\nWhy does the histogram become ineffective if the binwidth is too small (e.g. 5 feet)? we cant see the bars cause they are too thin",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-11-density-plots",
    "href": "activities/03-univariate-viz-notes.html#exercise-11-density-plots",
    "title": "4  Background",
    "section": "Exercise 11: Density plots",
    "text": "Exercise 11: Density plots\nDensity plots are essentially smooth versions of the histogram. Instead of sorting observations into discrete bins, the “density” of observations is calculated across the entire range of outcomes. The greater the number of observations, the greater the density! The density is then scaled so that the area under the density curve always equals 1 and the area under any fraction of the curve represents the fraction of cases that lie in that range.\nCheck out a density plot of elevation. Notice that the y-axis (density) has no contextual interpretation – it’s a relative measure. The higher the density, the more common are elevations in that range.\n\nggplot(hikes, aes(x = elevation)) +\n  geom_density()\n\n\n\n\n\n\n\n\nQuestions\n\nINTUITION CHECK: Before tweaking the code and thinking back to geom_bar() and geom_histogram(), how do you anticipate the following code will change the plot?\n\ngeom_density(color = \"blue\")\ngeom_density(fill = \"orange\")\n\nTRY IT! Test out those lines in the chunk below. Was your intuition correct?\n\n\nExamine the density plot. How does it compare to the histogram? What does it tell you about the typical elevation, variability / range in elevations, and shape of the distribution of elevations within this range?",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-12-density-plots-vs-histograms",
    "href": "activities/03-univariate-viz-notes.html#exercise-12-density-plots-vs-histograms",
    "title": "4  Background",
    "section": "Exercise 12: Density plots vs histograms",
    "text": "Exercise 12: Density plots vs histograms\nThe histogram and density plot both allow us to visualize the behavior of a quantitative variable: typical outcome, variability / range, shape, and outliers. What are the pros/cons of each? What do you like/not like about each?",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-13-code-communication",
    "href": "activities/03-univariate-viz-notes.html#exercise-13-code-communication",
    "title": "4  Background",
    "section": "Exercise 13: Code = communication",
    "text": "Exercise 13: Code = communication\nWe obviously won’t be done until we talk about communication. All code above has a similar general structure (where the details can change):\n\nggplot(___, aes(x = ___)) + \n  geom___(color = \"___\", fill = \"___\") + \n  labs(x = \"___\", y = \"___\")\n\n\nThough not necessary to the code working, it’s common, good practice to indent or tab the lines of code after the first line (counterexample below). Why?\n\n\n# YUCK\nggplot(hikes, aes(x = elevation)) +\ngeom_histogram(color = \"white\", binwidth = 200) +\nlabs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\nThough not necessary to the code working, it’s common, good practice to put a line break after each + (counterexample below). Why?\n\n\n# YUCK \nggplot(hikes, aes(x = elevation)) + geom_histogram(color = \"white\", binwidth = 200) + labs(x = \"Elevation (feet)\", y = \"Number of hikes\")",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "activities/03-univariate-viz-notes.html#exercise-14-practice",
    "href": "activities/03-univariate-viz-notes.html#exercise-14-practice",
    "title": "4  Background",
    "section": "Exercise 14: Practice",
    "text": "Exercise 14: Practice\n\nPart a\nPractice your viz skills to learn about some of the variables in one of the following datasets from the previous class:\n\n# Data on students in this class\nsurvey &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n# World Cup data\nworld_cup &lt;- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n\n\n\nPart b\nCheck out the RStudio Data Visualization cheat sheet to learn more features of ggplot.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>embed-resources: true</span>"
    ]
  },
  {
    "objectID": "notes/README.html",
    "href": "notes/README.html",
    "title": "Notes",
    "section": "",
    "text": "All notes live here.",
    "crumbs": [
      "Notes"
    ]
  }
]